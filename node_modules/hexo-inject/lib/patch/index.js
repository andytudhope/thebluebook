'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

exports.default = patch;

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _view = require('./view');

var _view2 = _interopRequireDefault(_view);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function patch(hexo) {
  function requireSiteModule(m) {
    return require(_path2.default.join(hexo.base_dir, 'node_modules/', m));
  }

  var log = hexo.log;

  var _hexo$version$split$m = hexo.version.split('.').map(function (v) {
    return parseInt(v);
  });

  var _hexo$version$split$m2 = _slicedToArray(_hexo$version$split$m, 2);

  var major = _hexo$version$split$m2[0];
  var minor = _hexo$version$split$m2[1];

  if (major === 3 && minor === 2) {
    log.info('[hexo-inject] installing hotfix for hexojs/hexo#1791');
    (0, _view2.default)(requireSiteModule('hexo/lib/theme/view'));
  }
}
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhdGNoL2luZGV4LmVzNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztrQkFHd0I7O0FBSHhCOzs7O0FBQ0E7Ozs7OztBQUVlLFNBQVMsS0FBVCxDQUFnQixJQUFoQixFQUFzQjtBQUNuQyxXQUFTLGlCQUFULENBQTRCLENBQTVCLEVBQStCO0FBQzdCLFdBQU8sUUFBUSxlQUFLLElBQUwsQ0FBVSxLQUFLLFFBQUwsRUFBZSxlQUF6QixFQUEwQyxDQUExQyxDQUFSLENBQVAsQ0FENkI7R0FBL0I7O01BSU0sTUFBUSxLQUFSLElBTDZCOzs4QkFNZCxLQUFLLE9BQUwsQ0FBYSxLQUFiLENBQW1CLEdBQW5CLEVBQXdCLEdBQXhCLENBQTRCLFVBQUMsQ0FBRDtXQUFPLFNBQVMsQ0FBVDtHQUFQLEVBTmQ7Ozs7TUFNOUIsa0NBTjhCO01BTXZCLGtDQU51Qjs7QUFPbkMsTUFBSSxVQUFVLENBQVYsSUFBZSxVQUFVLENBQVYsRUFBYTtBQUM5QixRQUFJLElBQUoseURBRDhCO0FBRTlCLHdCQUFVLGtCQUFrQixxQkFBbEIsQ0FBVixFQUY4QjtHQUFoQztDQVBhIiwiZmlsZSI6InBhdGNoL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHBhdGggZnJvbSAncGF0aCdcclxuaW1wb3J0IFZpZXdQYXRjaCBmcm9tICcuL3ZpZXcnXHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBwYXRjaCAoaGV4bykge1xyXG4gIGZ1bmN0aW9uIHJlcXVpcmVTaXRlTW9kdWxlIChtKSB7XHJcbiAgICByZXR1cm4gcmVxdWlyZShwYXRoLmpvaW4oaGV4by5iYXNlX2RpciwgJ25vZGVfbW9kdWxlcy8nLCBtKSlcclxuICB9XHJcblxyXG4gIGxldCB7IGxvZyB9ID0gaGV4b1xyXG4gIGxldCBbbWFqb3IsIG1pbm9yXSA9IGhleG8udmVyc2lvbi5zcGxpdCgnLicpLm1hcCgodikgPT4gcGFyc2VJbnQodikpXHJcbiAgaWYgKG1ham9yID09PSAzICYmIG1pbm9yID09PSAyKSB7XHJcbiAgICBsb2cuaW5mbyhgW2hleG8taW5qZWN0XSBpbnN0YWxsaW5nIGhvdGZpeCBmb3IgaGV4b2pzL2hleG8jMTc5MWApXHJcbiAgICBWaWV3UGF0Y2gocmVxdWlyZVNpdGVNb2R1bGUoJ2hleG8vbGliL3RoZW1lL3ZpZXcnKSlcclxuICB9XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
